{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Mathews\\\\Tech\\\\React\\\\NextJS - meet up project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/dist/client/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mathews:yp9rw5PaXQTIcJ00@cluster0.xi0bm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupIds = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  console.log(meetupIds);\n  return {\n    fallback: false,\n    paths: meetupIds.map(meetup => ({\n      params: {\n        meetupId: meetup.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://mathews:yp9rw5PaXQTIcJ00@cluster0.xi0bm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        title: meetup.title,\n        description: meetup.description,\n        image: meetup.image,\n        address: meetup.address\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Mathews/Tech/React/NextJS - meet up project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","useRouter","MeetupDetail","MeetupDetails","router","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupIds","find","_id","toArray","close","console","log","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEI,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,+GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAxB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACF,SAAO;AACLO,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAER,SAAS,CAACS,GAAV,CAAeC,MAAD,KAAa;AAChCC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACG,QAAP;AADJ;AADwB,KAAb,CAAd;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMjB,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,+GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMW,MAAM,GAAG,MAAMZ,iBAAiB,CAACkB,OAAlB,CAA0B;AAC7Cd,IAAAA,GAAG,EAAEnB,QAAQ,CAAC6B,QAAD;AADgC,GAA1B,CAArB;AAGAjB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVE,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KADJ;AAEVE,QAAAA,WAAW,EAAEiB,MAAM,CAACjB,WAFV;AAGVH,QAAAA,KAAK,EAAEoB,MAAM,CAACpB,KAHJ;AAIVE,QAAAA,OAAO,EAAEkB,MAAM,CAAClB;AAJN;AADP;AADF,GAAP;AAUD;AAED,eAAeN,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nconst MeetupDetails = () => {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mathews:yp9rw5PaXQTIcJ00@cluster0.xi0bm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetupIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n    console.log(meetupIds);\r\n  return {\r\n    fallback: false,\r\n    paths: meetupIds.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup.toString()\r\n      }\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mathews:yp9rw5PaXQTIcJ00@cluster0.xi0bm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: meetup.title,\r\n        description: meetup.description,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}