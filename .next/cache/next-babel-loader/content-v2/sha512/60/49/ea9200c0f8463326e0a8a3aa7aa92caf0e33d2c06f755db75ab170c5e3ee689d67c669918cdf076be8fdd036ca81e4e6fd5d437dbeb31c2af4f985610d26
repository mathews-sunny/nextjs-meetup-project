{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Mathews\\\\Tech\\\\React\\\\NextJS - meet up project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/dist/client/router\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  _s();\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MeetupDetails, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Mathews/Tech/React/NextJS - meet up project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["useRouter","Fragment","MeetupDetail","MeetupDetails","props","router","meetupData","title","description","image","address"],"mappings":";;;;;;AACA,SAASA,SAAT,QAA0B,yBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAC/B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQI,KAAK,CAACE,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEH,KAAK,CAACE,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEJ,KAAK,CAACE,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEL,KAAK,CAACE,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACE,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEN,KAAK,CAACE,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAjBD;;GAAML,a;UACWH,S;;;KADXG,a;;AA6DN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nconst MeetupDetails = (props) => {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta name=\"description\" content={props.meetupData.description} />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mathews:yp9rw5PaXQTIcJ00@cluster0.xi0bm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetupIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetupIds.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mathews:yp9rw5PaXQTIcJ00@cluster0.xi0bm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: meetup.title,\r\n        description: meetup.description,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}